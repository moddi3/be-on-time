import { Button, Typography } from '@mui/material';
import type { GetServerSideProps, NextPage } from 'next';
import { Session, unstable_getServerSession } from 'next-auth';
import { signIn, signOut, useSession } from 'next-auth/react';
import Head from 'next/head';
import Link from 'next/link';
import React, { useState } from 'react';
import { authOptions } from './api/auth/[...nextauth]';
import LoadingButton from '@mui/lab/LoadingButton';
import MuiLink from '@mui/material/Link';

const Home: NextPage = () => {
    return (
        <>
            <Head>
                <title>Be on time</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container mx-auto flex flex-col items-center justify-center h-screen p-4">
                <Typography
                    variant="h1"
                    className="font-extrabold text-gray-700"
                >
                    Be <span className="text-purple-300">On</span> Time
                </Typography>
                <HomeContent />
            </main>
        </>
    );
};

const HomeContent = () => {
    const { data: session } = useSession();
    const [isLoading, setIsLoading] = useState(false);

    const loginWithGoogle = () => signIn('google');

    const logOut = () => {
        setIsLoading(true);
        signOut();
    };
    console.log(session);
    if (!session) {
        return (
            <div className="flex">
                <LoginButton onClick={loginWithGoogle} />
            </div>
        );
    }

    return (
        <div>
            <p>
                <span className="font-semibold font-mono">
                    {session.user?.name}
                </span>
                , you are logged in!
                <br />
                <Link href={`/${session.user?.id}/reserve/`}>
                    <MuiLink component="button" variant="h6">
                        Reserve {session.user?.id}
                    </MuiLink>
                </Link>
            </p>

            <LoadingButton
                loading={isLoading}
                onClick={logOut}
                variant="outlined"
                color="error"
                className="rounded-md w-full"
            >
                Log out
            </LoadingButton>
        </div>
    );
};

const LoginButton: React.FC<{ onClick: () => void }> = ({ onClick }) => {
    const [isLoading, setIsLoading] = useState(false);

    const onClickAction = () => {
        setIsLoading(true);
        onClick();
    };

    return (
        <LoadingButton
            onClick={onClickAction}
            loading={isLoading}
            variant="outlined"
            color="secondary"
            className="rounded-md w-full"
        >
            Login with Google
        </LoadingButton>
    );
};

export const getServerSideProps: GetServerSideProps<{
    session: Session | null;
}> = async (context) => {
    const session = await unstable_getServerSession(
        context.req,
        context.res,
        authOptions
    );

    return {
        props: {
            session,
        },
    };
};

export default Home;
